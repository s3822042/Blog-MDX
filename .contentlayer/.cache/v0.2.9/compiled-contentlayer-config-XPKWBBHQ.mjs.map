{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["import {\n  defineDocumentType,\n  defineNestedType,\n  makeSource,\n} from \"contentlayer/source-files\";\nimport readingTime from \"reading-time\";\nimport rehypePrism from \"rehype-prism-plus\";\nimport rehypeSlug from \"rehype-slug\";\nimport rehypeCodeTitles from \"rehype-code-titles\";\nimport remarkGfm from \"remark-gfm\";\nimport rehypeAutolinkHeadings from \"rehype-autolink-headings\";\nimport rehypeStringify from \"rehype-stringify\";\nimport rehypeToc from \"@jsdevtools/rehype-toc\";\n\nconst customizeTOC = (toc) => {\n  try {\n    const { children } = toc;\n    const childrenOfChildren = children?.[0]?.children;\n    if (!children?.length || !childrenOfChildren?.length) return null;\n  } catch (e) {}\n  return {\n    type: \"element\",\n    tagName: \"div\",\n    properties: { className: \"toc\" },\n    children: [\n      {\n        type: \"element\",\n        tagName: \"p\",\n        properties: { className: \"ml-6 pt-2 pb-2 text-xl font-bold\" },\n        children: [\n          {\n            type: \"text\",\n            value: \"Table of Contents\",\n          },\n        ],\n      },\n      ...(toc.children || []),\n    ],\n  };\n};\n\nconst computedFields = {\n  readingTime: { type: \"json\", resolve: (doc) => readingTime(doc.body.raw) },\n  wordCount: {\n    type: \"number\",\n    resolve: (doc) => doc.body.raw.split(/\\s+/gu).length,\n  },\n  slug: {\n    type: \"string\",\n    resolve: (doc) => doc._raw.sourceFileName.replace(/\\.mdx$/, \"\"),\n  },\n};\n\nconst Tag = defineNestedType(() => ({\n  name: \"Tag\",\n  fields: {\n    title: { type: \"string\" },\n  },\n}));\n\nconst Categories = defineNestedType(() => ({\n  name: \"Categories\",\n  fields: {\n    title: { type: \"string\" },\n  },\n}));\n\nconst Author = defineNestedType(() => ({\n  name: \"Author\",\n  fields: {\n    name: { type: \"string\", required: true },\n    image: { type: \"string\", required: true },\n  },\n}));\n\nconst Article = defineDocumentType(() => ({\n  name: \"Article\",\n  filePathPattern: \"articles/*.mdx\",\n  contentType: \"mdx\",\n  fields: {\n    title: { type: \"string\", required: true },\n    publishedAt: { type: \"string\", required: true },\n    description: { type: \"string\", required: true },\n    seoDescription: { type: \"string\", required: true },\n    categories: {\n      type: \"list\",\n      of: Categories,\n    },\n    tags: {\n      type: \"list\",\n      of: Tag,\n    },\n    author: {\n      type: \"nested\",\n      of: Author,\n    },\n    image: { type: \"string\", required: true },\n  },\n  computedFields,\n}));\n\nconst contentLayerConfig = makeSource({\n  contentDirPath: \"data\",\n  documentTypes: [Article],\n  mdx: {\n    remarkPlugins: [remarkGfm],\n    rehypePlugins: [\n      rehypeCodeTitles,\n      rehypeSlug,\n      rehypePrism,\n      [rehypeToc, { customizeTOC }],\n      rehypeStringify,\n      [\n        rehypeAutolinkHeadings,\n        {\n          properties: {\n            className: [\"anchor\"],\n          },\n        },\n      ],\n    ],\n  },\n});\n\nexport default contentLayerConfig;\n"],
  "mappings": "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",
  "names": []
}
