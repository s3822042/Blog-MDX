{
  "title": "Authentication and DB access with Next, Prisma",
  "publishedAt": "2022-11-17",
  "description": "A sample description of this application.",
  "seoDescription": "This is the seoDescription for this markdown file.",
  "category": "Software Engineering",
  "author": {
    "name": "Vo Thanh Luan",
    "image": "https://imgur.com/wnuKAT5.jpg",
    "type": "Author",
    "_raw": {}
  },
  "image": "https://imgur.com/fnduee1.jpg'",
  "body": {
    "raw": "\r\n## Overview\r\n\r\nBuilding modern full-stack applications has gotten easier for frontend developers with new technologies and tools.With these, we can build frontend applications with server-side capabilities with frameworks like Next.js.We can also abstract the complex details of interfacing with a database using an ORM like Prisma.In this tutorial, we’ll learn how to build a full-stack application with authentication and CRUD functionality using Next.js, Prisma & MongoDB. We’ll explain these technologies and related concepts and see how we can put these technologies together to build an application.\r\n\r\n## Prisma\r\n\r\nPrisma is a next-generation object-relational mapper (ORM) that can be used to access a database in Node.js and TypeScript applications. We’ll use Prisma to interact with our MongoDB database to CREATE, READ, UPDATE and DELETE notes, create users in our database, and define the schema for users and notes.\r\n\r\nCool, but what’s an ORM, and why do we need Prisma to access our database? Object Relational Mapping is a technique used to access and manage relational databases using an object-oriented programming language (like JavaScript). Prisma ORM works for MongoDB too, which is the document-based database that we’ll be using in the article. ORMs let you model your application data by mapping classes to tables in the database, and instances of classes are mapped to rows in the tables. In Prisma, though, which takes a somewhat different approach from other traditional ORMs, the application models are defined in your Prisma schema.\r\n\r\nNext, let’s take a look at MongoDB.\r\n\r\n## MongoDB\r\n\r\nMongoDB is a No-SQL database that stores data in documents in a JSON-like format. Collections are a set of documents equivalent to a table in a relational database. With a document data model that maps to how developers think and code and a powerful, unified query API, MongoDB powers faster, more flexible application development. This is where we will store our data.\r\n\r\n## Next.js\r\n\r\nNext.js is an open-source React framework that makes it easier to build production-ready react applications by providing multiple features like server-side rendering and static-site generation, which renders the application on the server and hydrates (add the JavaScript functionality) on the client (browser). Next.js also includes features like API Routes, File-system Routing, Fast Refresh, Built-in CSS Support, Meta tags, and many more.\r\n\r\n## Prerequisites\r\n\r\nBefore going further, you need:\r\n\r\n- Basic knowledge of JavaScript, React and Next.js\r\n- Node.js\r\n- A MongoDB Database. Make sure that your MongoDB deployment is configured with replica sets to be able to integrate with Prisma. You can launch a free instance of MongoDB on MongoDB Atlas, which has **replica set** support out-of-the-box. You can also convert standalone to replica set if you want to work with MongoDB locally.\r\n- A Google account and access to the Google Cloud Console\r\n- IDE preferably Visual Studio Code with Prisma extension\r\n\r\nIn addition, you are expected to have basic knowledge of these technologies.\r\n\r\n## Setting up NextAuth, Prisma & MongoDB\r\n\r\nAn Adapter in NextAuth.js connects your application to whatever database or backend system you want to use to store data for users, their accounts, sessions, etc. We will be using the Prisma adapter. To use this Adapter, you need to install Prisma Client, Prisma CLI, and the separate **@next-auth/prisma-adapter** package:\r\n\r\n```bash\r\nnpm install next-auth @prisma/client @next-auth/prisma-adapter\r\nnpm install --save-dev prisma\r\n```\r\n\r\nLet’s set up our MongoDB cluster so we can configure our NextAuth.js to use the Prisma Adapter. Log in to MongoDB and set up a MongoDB cluster on Atlas. Go to Projects and create a new project then create new cluster\r\n\r\n## Working with Prisma\r\n\r\nWe can use the Prisma CLI tool to create a couple of Prisma-related files. Run:\r\n\r\n```bash\r\nnpx prisma init\r\n```\r\n\r\nThis creates a basic `/prisma/schema.prisma` file. This schema is adapted for use in Prisma and based on NextAuth main schema. We will modify the schema to work with NextAuth, enter the following code into the schema:\r\n\r\n```js\r\ndatasource db {\r\n  provider = \"mongodb\"\r\n  url      = env(\"DATABASE_URL\")\r\n}\r\ngenerator client {\r\n  provider        = \"prisma-client-js\"\r\n}\r\n```\r\n\r\nMake sure to change the provider to **mongodb** and then create schema of the database in the [prisma syntax](https://www.prisma.io/docs/concepts/components/prisma-schema).\r\n\r\nNow that we have written our schema, we can create the collections in our database. Using the Prisma using the CLI tool, run `npx prisma db push`\r\n\r\nWe should see our new collections if we check our database collection in Atlas.\r\n\r\nAwesome! Now, to interact with our database, we must first generate the Prisma Client. Use the Prisma CLI to generate the Prisma Client.\r\n\r\n```bash\r\nnpx prisma generate\r\n```\r\n\r\nWe can start using PrismaClient to interact with our database. We’ll use a single PrismaClient instance that we can import into any file where needed. Create a new `./prisma/prisma.ts` file:\r\n\r\n```js\r\nimport { PrismaClient } from \"@prisma/client\";\r\nlet prisma;\r\nif (process.env.NODE_ENV === \"production\") {\r\n  prisma = new PrismaClient();\r\n} else {\r\n  if (!global.prisma) {\r\n    global.prisma = new PrismaClient();\r\n  }\r\n  prisma = global.prisma;\r\n}\r\nexport default prisma;\r\n```\r\n\r\n## Set up our Google application\r\n\r\nWe’ll be using Google provider for this project, and so we need to get our environment variables to configure our Google provider.\r\n\r\n1. Log into Google Cloud console\r\n   2.Click on the dropdown which opens a modal; in the top right corner of the modal, click on **New Project**, to create a new project.\r\n2. Enter the project name and click create. Once the project is created, click on **SELECT PROJECT** in the notifications modal.\r\n3. Go to **APIs & Services > Credentials**.\r\n4. Configure the consent screen -> External user -> Add app information -> Create credentials\r\n5. Add an authorized Google URI for development - **http://localhost:3000/api/auth/callback/google**\r\n6. Click on Create, and after the client ID has been created, we will have our Client ID and Client Secret. Create a .env file to save these variables\r\n\r\n```bash\r\nGOOGLE_CLIENT_ID=<client_ID_here>\r\nGOOGLE_CLIENT_SECRET=<client_secret_here>\r\nDATABASE_URL=<your_mongodb_database_url>\r\nNEXTAUTH_SECRET=somesecret\r\nNEXTAUTH_URL=http://localhost:3000\r\n```\r\n\r\n## Set up NextAuth with the Prisma adapter\r\n\r\nTo add NextAuth.js to a project, create a file called `[...nextauth].ts` in pages/api/auth. This contains the dynamic route handler for NextAuth.js, which will also contain all your global NextAuth.js configurations. All requests to /api/auth/\\* (signIn, callback, signOut, etc.) will automatically be handled by NextAuth.js. We also configure your NextAuth.js to use the Prisma Adapter and Prisma client.\r\n\r\n```js\r\nimport NextAuth from \"next-auth\";\r\nimport GoogleProvider from \"next-auth/providers/google\";\r\nimport { PrismaAdapter } from \"@next-auth/prisma-adapter\";\r\nimport prisma from \"../../../prisma/prisma\";\r\n\r\nexport default NextAuth({\r\n  adapter: PrismaAdapter(prisma),\r\n  providers: [\r\n    GoogleProvider({\r\n      clientId: process.env.GOOGLE_CLIENT_ID,\r\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET,\r\n    }),\r\n  ],\r\n  callbacks: {\r\n    async session({ session, token, user }) {\r\n      session.user.id = user.id;\r\n      return session;\r\n    },\r\n  },\r\n});\r\n```\r\n\r\nTake note of the callbacks object; this is where we populate the user session with their id as NextAuth does not provide this value by default.\r\n\r\n## Configure the NextAuth Shared session state\r\n\r\nThe useSession() React Hook in the NextAuth.js client is the easiest way to check if someone is signed in. To be able to use useSession first you’ll need to expose the session context, [**SessionProvider**](https://next-auth.js.org/getting-started/client#sessionprovider), at the top level of your application:\r\n\r\n```js\r\nimport { SessionProvider } from \"next-auth/react\";\r\n\r\nfunction MyApp({ Component, pageProps: { session, ...pageProps } }) {\r\n  return (\r\n    <SessionProvider session={session}>\r\n      <Component {...pageProps} />\r\n    </SessionProvider>\r\n  );\r\n}\r\nexport default MyApp;\r\n```\r\n\r\nInstances of useSession will then have access to the session data and status. The component SessionProvider also keeps the session updated and synced between browser tabs and windows.\r\n\r\n**Quick note**: To display images from another domain using Next.js Image, we need to add it to a list of domains in our `./next.config.js` file\r\n\r\n```js\r\nconst nextConfig = {\r\n  reactStrictMode: true,\r\n  images: {\r\n    domains: [\"lh3.googleusercontent.com\"],\r\n  },\r\n};\r\nmodule.exports = nextConfig;\r\n```\r\n\r\nNow, you can make change to your prisma schema and to sync with the mongoDB database, simply run `npx prisma db push`\r\n\r\n## Conclusion\r\n\r\nIt’s a popular fact that Next.js and Prisma are great for building fast full-stack applications. In this tutorial, we built a notes application where users can log in to the application thanks to NextAuth, create, view, edit and delete notes. All user information and notes are saved to a MongoDB database. To interact with the database from the Next.js application, we used the Prisma ORM, which helps us define our schema and create and connect to our database for us to manage it.\r\n",
    "code": "var Component=(()=>{var p=Object.create;var c=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,N=Object.prototype.hasOwnProperty;var k=(a,e)=>()=>(e||a((e={exports:{}}).exports,e),e.exports),g=(a,e)=>{for(var s in e)c(a,s,{get:e[s],enumerable:!0})},l=(a,e,s,o)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let t of m(e))!N.call(a,t)&&t!==s&&c(a,t,{get:()=>e[t],enumerable:!(o=h(e,t))||o.enumerable});return a};var w=(a,e,s)=>(s=a!=null?p(u(a)):{},l(e||!a||!a.__esModule?c(s,\"default\",{value:a,enumerable:!0}):s,a)),f=a=>l(c({},\"__esModule\",{value:!0}),a);var r=k((A,i)=>{i.exports=_jsx_runtime});var v={};g(v,{default:()=>x,frontmatter:()=>y});var n=w(r()),y={title:\"Authentication and DB access with Next, Prisma\",publishedAt:\"2022-11-17\",description:\"A sample description of this application.\",seoDescription:\"This is the seoDescription for this markdown file.\",category:\"Software Engineering\",author:{name:\"Vo Thanh Luan\",image:\"https://imgur.com/wnuKAT5.jpg\"},image:\"https://imgur.com/fnduee1.jpg'\"};function d(a){let e=Object.assign({div:\"div\",p:\"p\",ol:\"ol\",li:\"li\",a:\"a\",h2:\"h2\",ul:\"ul\",strong:\"strong\",pre:\"pre\",code:\"code\",span:\"span\"},a.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.div,{className:\"toc\",children:[(0,n.jsx)(e.p,{className:\"ml-6 pt-2 pb-2 text-xl font-bold\",children:\"Table of Contents\"}),(0,n.jsxs)(e.ol,{className:\"toc-level toc-level-1\",children:[(0,n.jsx)(e.li,{className:\"toc-item toc-item-h2\",children:(0,n.jsx)(e.a,{className:\"toc-link toc-link-h2\",href:\"#overview\",children:\"Overview\"})}),(0,n.jsx)(e.li,{className:\"toc-item toc-item-h2\",children:(0,n.jsx)(e.a,{className:\"toc-link toc-link-h2\",href:\"#prisma\",children:\"Prisma\"})}),(0,n.jsx)(e.li,{className:\"toc-item toc-item-h2\",children:(0,n.jsx)(e.a,{className:\"toc-link toc-link-h2\",href:\"#mongodb\",children:\"MongoDB\"})}),(0,n.jsx)(e.li,{className:\"toc-item toc-item-h2\",children:(0,n.jsx)(e.a,{className:\"toc-link toc-link-h2\",href:\"#nextjs\",children:\"Next.js\"})}),(0,n.jsx)(e.li,{className:\"toc-item toc-item-h2\",children:(0,n.jsx)(e.a,{className:\"toc-link toc-link-h2\",href:\"#prerequisites\",children:\"Prerequisites\"})}),(0,n.jsx)(e.li,{className:\"toc-item toc-item-h2\",children:(0,n.jsx)(e.a,{className:\"toc-link toc-link-h2\",href:\"#setting-up-nextauth-prisma--mongodb\",children:\"Setting up NextAuth, Prisma & MongoDB\"})}),(0,n.jsx)(e.li,{className:\"toc-item toc-item-h2\",children:(0,n.jsx)(e.a,{className:\"toc-link toc-link-h2\",href:\"#working-with-prisma\",children:\"Working with Prisma\"})}),(0,n.jsx)(e.li,{className:\"toc-item toc-item-h2\",children:(0,n.jsx)(e.a,{className:\"toc-link toc-link-h2\",href:\"#set-up-our-google-application\",children:\"Set up our Google application\"})}),(0,n.jsx)(e.li,{className:\"toc-item toc-item-h2\",children:(0,n.jsx)(e.a,{className:\"toc-link toc-link-h2\",href:\"#set-up-nextauth-with-the-prisma-adapter\",children:\"Set up NextAuth with the Prisma adapter\"})}),(0,n.jsx)(e.li,{className:\"toc-item toc-item-h2\",children:(0,n.jsx)(e.a,{className:\"toc-link toc-link-h2\",href:\"#configure-the-nextauth-shared-session-state\",children:\"Configure the NextAuth Shared session state\"})}),(0,n.jsx)(e.li,{className:\"toc-item toc-item-h2\",children:(0,n.jsx)(e.a,{className:\"toc-link toc-link-h2\",href:\"#conclusion\",children:\"Conclusion\"})})]})]}),`\n`,(0,n.jsx)(e.h2,{id:\"overview\",children:\"Overview\"}),`\n`,(0,n.jsx)(e.p,{children:\"Building modern full-stack applications has gotten easier for frontend developers with new technologies and tools.With these, we can build frontend applications with server-side capabilities with frameworks like Next.js.We can also abstract the complex details of interfacing with a database using an ORM like Prisma.In this tutorial, we\\u2019ll learn how to build a full-stack application with authentication and CRUD functionality using Next.js, Prisma & MongoDB. We\\u2019ll explain these technologies and related concepts and see how we can put these technologies together to build an application.\"}),`\n`,(0,n.jsx)(e.h2,{id:\"prisma\",children:\"Prisma\"}),`\n`,(0,n.jsx)(e.p,{children:\"Prisma is a next-generation object-relational mapper (ORM) that can be used to access a database in Node.js and TypeScript applications. We\\u2019ll use Prisma to interact with our MongoDB database to CREATE, READ, UPDATE and DELETE notes, create users in our database, and define the schema for users and notes.\"}),`\n`,(0,n.jsx)(e.p,{children:\"Cool, but what\\u2019s an ORM, and why do we need Prisma to access our database? Object Relational Mapping is a technique used to access and manage relational databases using an object-oriented programming language (like JavaScript). Prisma ORM works for MongoDB too, which is the document-based database that we\\u2019ll be using in the article. ORMs let you model your application data by mapping classes to tables in the database, and instances of classes are mapped to rows in the tables. In Prisma, though, which takes a somewhat different approach from other traditional ORMs, the application models are defined in your Prisma schema.\"}),`\n`,(0,n.jsx)(e.p,{children:\"Next, let\\u2019s take a look at MongoDB.\"}),`\n`,(0,n.jsx)(e.h2,{id:\"mongodb\",children:\"MongoDB\"}),`\n`,(0,n.jsx)(e.p,{children:\"MongoDB is a No-SQL database that stores data in documents in a JSON-like format. Collections are a set of documents equivalent to a table in a relational database. With a document data model that maps to how developers think and code and a powerful, unified query API, MongoDB powers faster, more flexible application development. This is where we will store our data.\"}),`\n`,(0,n.jsx)(e.h2,{id:\"nextjs\",children:\"Next.js\"}),`\n`,(0,n.jsx)(e.p,{children:\"Next.js is an open-source React framework that makes it easier to build production-ready react applications by providing multiple features like server-side rendering and static-site generation, which renders the application on the server and hydrates (add the JavaScript functionality) on the client (browser). Next.js also includes features like API Routes, File-system Routing, Fast Refresh, Built-in CSS Support, Meta tags, and many more.\"}),`\n`,(0,n.jsx)(e.h2,{id:\"prerequisites\",children:\"Prerequisites\"}),`\n`,(0,n.jsx)(e.p,{children:\"Before going further, you need:\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Basic knowledge of JavaScript, React and Next.js\"}),`\n`,(0,n.jsx)(e.li,{children:\"Node.js\"}),`\n`,(0,n.jsxs)(e.li,{children:[\"A MongoDB Database. Make sure that your MongoDB deployment is configured with replica sets to be able to integrate with Prisma. You can launch a free instance of MongoDB on MongoDB Atlas, which has \",(0,n.jsx)(e.strong,{children:\"replica set\"}),\" support out-of-the-box. You can also convert standalone to replica set if you want to work with MongoDB locally.\"]}),`\n`,(0,n.jsx)(e.li,{children:\"A Google account and access to the Google Cloud Console\"}),`\n`,(0,n.jsx)(e.li,{children:\"IDE preferably Visual Studio Code with Prisma extension\"}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:\"In addition, you are expected to have basic knowledge of these technologies.\"}),`\n`,(0,n.jsx)(e.h2,{id:\"setting-up-nextauth-prisma--mongodb\",children:\"Setting up NextAuth, Prisma & MongoDB\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"An Adapter in NextAuth.js connects your application to whatever database or backend system you want to use to store data for users, their accounts, sessions, etc. We will be using the Prisma adapter. To use this Adapter, you need to install Prisma Client, Prisma CLI, and the separate \",(0,n.jsx)(e.strong,{children:\"@next-auth/prisma-adapter\"}),\" package:\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsxs)(e.code,{className:\"language-bash code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token function\",children:\"npm\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"install\"}),` next-auth @prisma/client @next-auth/prisma-adapter\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token function\",children:\"npm\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"install\"}),` --save-dev prisma\n`]})]})}),`\n`,(0,n.jsx)(e.p,{children:\"Let\\u2019s set up our MongoDB cluster so we can configure our NextAuth.js to use the Prisma Adapter. Log in to MongoDB and set up a MongoDB cluster on Atlas. Go to Projects and create a new project then create new cluster\"}),`\n`,(0,n.jsx)(e.h2,{id:\"working-with-prisma\",children:\"Working with Prisma\"}),`\n`,(0,n.jsx)(e.p,{children:\"We can use the Prisma CLI tool to create a couple of Prisma-related files. Run:\"}),`\n`,(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsx)(e.code,{className:\"language-bash code-highlight\",children:(0,n.jsx)(e.span,{className:\"code-line\",children:`npx prisma init\n`})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"This creates a basic \",(0,n.jsx)(e.code,{children:\"/prisma/schema.prisma\"}),\" file. This schema is adapted for use in Prisma and based on NextAuth main schema. We will modify the schema to work with NextAuth, enter the following code into the schema:\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-js\",children:(0,n.jsxs)(e.code,{className:\"language-js code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"datasource db \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  provider \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"mongodb\"'}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  url      \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"env\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token string\",children:'\"DATABASE_URL\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"generator client \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  provider        \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"prisma-client-js\"'}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Make sure to change the provider to \",(0,n.jsx)(e.strong,{children:\"mongodb\"}),\" and then create schema of the database in the \",(0,n.jsx)(e.a,{href:\"https://www.prisma.io/docs/concepts/components/prisma-schema\",children:\"prisma syntax\"}),\".\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Now that we have written our schema, we can create the collections in our database. Using the Prisma using the CLI tool, run \",(0,n.jsx)(e.code,{children:\"npx prisma db push\"})]}),`\n`,(0,n.jsx)(e.p,{children:\"We should see our new collections if we check our database collection in Atlas.\"}),`\n`,(0,n.jsx)(e.p,{children:\"Awesome! Now, to interact with our database, we must first generate the Prisma Client. Use the Prisma CLI to generate the Prisma Client.\"}),`\n`,(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsx)(e.code,{className:\"language-bash code-highlight\",children:(0,n.jsx)(e.span,{className:\"code-line\",children:`npx prisma generate\n`})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"We can start using PrismaClient to interact with our database. We\\u2019ll use a single PrismaClient instance that we can import into any file where needed. Create a new \",(0,n.jsx)(e.code,{children:\"./prisma/prisma.ts\"}),\" file:\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-js\",children:(0,n.jsxs)(e.code,{className:\"language-js code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword module\",children:\"import\"}),\" \",(0,n.jsxs)(e.span,{className:\"token imports\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\" \",(0,n.jsx)(e.span,{className:\"token maybe-class-name\",children:\"PrismaClient\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"})]}),\" \",(0,n.jsx)(e.span,{className:\"token keyword module\",children:\"from\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"@prisma/client\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"let\"}),\" prisma\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword control-flow\",children:\"if\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"process\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token property-access\",children:\"env\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token constant\",children:\"NODE_ENV\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"===\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"production\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  prisma \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"new\"}),\" \",(0,n.jsx)(e.span,{className:\"token class-name\",children:\"PrismaClient\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword control-flow\",children:\"else\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token keyword control-flow\",children:\"if\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\"!\"}),\"global\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token property-access\",children:\"prisma\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    global\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token property-access\",children:\"prisma\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"new\"}),\" \",(0,n.jsx)(e.span,{className:\"token class-name\",children:\"PrismaClient\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  prisma \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" global\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token property-access\",children:\"prisma\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword module\",children:\"export\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword module\",children:\"default\"}),\" prisma\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]})]})}),`\n`,(0,n.jsx)(e.h2,{id:\"set-up-our-google-application\",children:\"Set up our Google application\"}),`\n`,(0,n.jsx)(e.p,{children:\"We\\u2019ll be using Google provider for this project, and so we need to get our environment variables to configure our Google provider.\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[`Log into Google Cloud console\\r\n2.Click on the dropdown which opens a modal; in the top right corner of the modal, click on `,(0,n.jsx)(e.strong,{children:\"New Project\"}),\", to create a new project.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"Enter the project name and click create. Once the project is created, click on \",(0,n.jsx)(e.strong,{children:\"SELECT PROJECT\"}),\" in the notifications modal.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"Go to \",(0,n.jsx)(e.strong,{children:\"APIs & Services > Credentials\"}),\".\"]}),`\n`,(0,n.jsx)(e.li,{children:\"Configure the consent screen -> External user -> Add app information -> Create credentials\"}),`\n`,(0,n.jsxs)(e.li,{children:[\"Add an authorized Google URI for development - \",(0,n.jsx)(e.strong,{children:(0,n.jsx)(e.a,{href:\"http://localhost:3000/api/auth/callback/google\",children:\"http://localhost:3000/api/auth/callback/google\"})})]}),`\n`,(0,n.jsx)(e.li,{children:\"Click on Create, and after the client ID has been created, we will have our Client ID and Client Secret. Create a .env file to save these variables\"}),`\n`]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsxs)(e.code,{className:\"language-bash code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token assign-left variable\",children:\"GOOGLE_CLIENT_ID\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),\"client_ID_here\",(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token assign-left variable\",children:\"GOOGLE_CLIENT_SECRET\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),\"client_secret_here\",(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token assign-left variable\",children:\"DATABASE_URL\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),\"your_mongodb_database_url\",(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token assign-left variable\",children:\"NEXTAUTH_SECRET\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),`somesecret\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token assign-left variable\",children:\"NEXTAUTH_URL\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),`http://localhost:3000\n`]})]})}),`\n`,(0,n.jsx)(e.h2,{id:\"set-up-nextauth-with-the-prisma-adapter\",children:\"Set up NextAuth with the Prisma adapter\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"To add NextAuth.js to a project, create a file called \",(0,n.jsx)(e.code,{children:\"[...nextauth].ts\"}),\" in pages/api/auth. This contains the dynamic route handler for NextAuth.js, which will also contain all your global NextAuth.js configurations. All requests to /api/auth/* (signIn, callback, signOut, etc.) will automatically be handled by NextAuth.js. We also configure your NextAuth.js to use the Prisma Adapter and Prisma client.\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-js\",children:(0,n.jsxs)(e.code,{className:\"language-js code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword module\",children:\"import\"}),\" \",(0,n.jsx)(e.span,{className:\"token imports\",children:(0,n.jsx)(e.span,{className:\"token maybe-class-name\",children:\"NextAuth\"})}),\" \",(0,n.jsx)(e.span,{className:\"token keyword module\",children:\"from\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"next-auth\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword module\",children:\"import\"}),\" \",(0,n.jsx)(e.span,{className:\"token imports\",children:(0,n.jsx)(e.span,{className:\"token maybe-class-name\",children:\"GoogleProvider\"})}),\" \",(0,n.jsx)(e.span,{className:\"token keyword module\",children:\"from\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"next-auth/providers/google\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword module\",children:\"import\"}),\" \",(0,n.jsxs)(e.span,{className:\"token imports\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\" \",(0,n.jsx)(e.span,{className:\"token maybe-class-name\",children:\"PrismaAdapter\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"})]}),\" \",(0,n.jsx)(e.span,{className:\"token keyword module\",children:\"from\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"@next-auth/prisma-adapter\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword module\",children:\"import\"}),\" \",(0,n.jsx)(e.span,{className:\"token imports\",children:\"prisma\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword module\",children:\"from\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"../../../prisma/prisma\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\\r\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\\r\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword module\",children:\"export\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword module\",children:\"default\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:(0,n.jsx)(e.span,{className:\"token maybe-class-name\",children:\"NextAuth\"})}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token literal-property property\",children:\"adapter\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:(0,n.jsx)(e.span,{className:\"token maybe-class-name\",children:\"PrismaAdapter\"})}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"prisma\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token literal-property property\",children:\"providers\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token function\",children:(0,n.jsx)(e.span,{className:\"token maybe-class-name\",children:\"GoogleProvider\"})}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"      \",(0,n.jsx)(e.span,{className:\"token literal-property property\",children:\"clientId\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" process\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token property-access\",children:\"env\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token constant\",children:\"GOOGLE_CLIENT_ID\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"      \",(0,n.jsx)(e.span,{className:\"token literal-property property\",children:\"clientSecret\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" process\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token property-access\",children:\"env\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token constant\",children:\"GOOGLE_CLIENT_SECRET\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token literal-property property\",children:\"callbacks\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"async\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"session\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsxs)(e.span,{className:\"token parameter\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\" session\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" token\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" user \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"})]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"      session\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token property-access\",children:\"user\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token property-access\",children:\"id\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" user\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token property-access\",children:\"id\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"      \",(0,n.jsx)(e.span,{className:\"token keyword control-flow\",children:\"return\"}),\" session\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]})]})}),`\n`,(0,n.jsx)(e.p,{children:\"Take note of the callbacks object; this is where we populate the user session with their id as NextAuth does not provide this value by default.\"}),`\n`,(0,n.jsx)(e.h2,{id:\"configure-the-nextauth-shared-session-state\",children:\"Configure the NextAuth Shared session state\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"The useSession() React Hook in the NextAuth.js client is the easiest way to check if someone is signed in. To be able to use useSession first you\\u2019ll need to expose the session context, \",(0,n.jsx)(e.a,{href:\"https://next-auth.js.org/getting-started/client#sessionprovider\",children:(0,n.jsx)(e.strong,{children:\"SessionProvider\"})}),\", at the top level of your application:\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-js\",children:(0,n.jsxs)(e.code,{className:\"language-js code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword module\",children:\"import\"}),\" \",(0,n.jsxs)(e.span,{className:\"token imports\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\" \",(0,n.jsx)(e.span,{className:\"token maybe-class-name\",children:\"SessionProvider\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"})]}),\" \",(0,n.jsx)(e.span,{className:\"token keyword module\",children:\"from\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"next-auth/react\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\\r\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\\r\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"function\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:(0,n.jsx)(e.span,{className:\"token maybe-class-name\",children:\"MyApp\"})}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsxs)(e.span,{className:\"token parameter\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\" \",(0,n.jsx)(e.span,{className:\"token maybe-class-name\",children:\"Component\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token literal-property property\",children:\"pageProps\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\" session\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token spread operator\",children:\"...\"}),\"pageProps \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"})]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token keyword control-flow\",children:\"return\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),(0,n.jsx)(e.span,{className:\"token maybe-class-name\",children:\"SessionProvider\"}),\" session\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\"session\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"      \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),(0,n.jsx)(e.span,{className:\"token maybe-class-name\",children:\"Component\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),(0,n.jsx)(e.span,{className:\"token spread operator\",children:\"...\"}),\"pageProps\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"/\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"<\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\"/\"}),(0,n.jsx)(e.span,{className:\"token maybe-class-name\",children:\"SessionProvider\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\">\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword module\",children:\"export\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword module\",children:\"default\"}),\" \",(0,n.jsx)(e.span,{className:\"token maybe-class-name\",children:\"MyApp\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]})]})}),`\n`,(0,n.jsx)(e.p,{children:\"Instances of useSession will then have access to the session data and status. The component SessionProvider also keeps the session updated and synced between browser tabs and windows.\"}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"Quick note\"}),\": To display images from another domain using Next.js Image, we need to add it to a list of domains in our \",(0,n.jsx)(e.code,{children:\"./next.config.js\"}),\" file\"]}),`\n`,(0,n.jsx)(e.pre,{className:\"language-js\",children:(0,n.jsxs)(e.code,{className:\"language-js code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"const\"}),\" nextConfig \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token literal-property property\",children:\"reactStrictMode\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token boolean\",children:\"true\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token literal-property property\",children:\"images\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token literal-property property\",children:\"domains\"}),(0,n.jsx)(e.span,{className:\"token operator\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),(0,n.jsx)(e.span,{className:\"token string\",children:'\"lh3.googleusercontent.com\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\\r\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"module\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),(0,n.jsx)(e.span,{className:\"token property-access\",children:\"exports\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" nextConfig\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\";\"}),`\n`]})]})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Now, you can make change to your prisma schema and to sync with the mongoDB database, simply run \",(0,n.jsx)(e.code,{children:\"npx prisma db push\"})]}),`\n`,(0,n.jsx)(e.h2,{id:\"conclusion\",children:\"Conclusion\"}),`\n`,(0,n.jsx)(e.p,{children:\"It\\u2019s a popular fact that Next.js and Prisma are great for building fast full-stack applications. In this tutorial, we built a notes application where users can log in to the application thanks to NextAuth, create, view, edit and delete notes. All user information and notes are saved to a MongoDB database. To interact with the database from the Next.js application, we used the Prisma ORM, which helps us define our schema and create and connect to our database for us to manage it.\"})]})}function b(a={}){let{wrapper:e}=a.components||{};return e?(0,n.jsx)(e,Object.assign({},a,{children:(0,n.jsx)(d,a)})):d(a)}var x=b;return f(v);})();\n;return Component;"
  },
  "_id": "articles/authentication-with-next-and-prisma.mdx",
  "_raw": {
    "sourceFilePath": "articles/authentication-with-next-and-prisma.mdx",
    "sourceFileName": "authentication-with-next-and-prisma.mdx",
    "sourceFileDir": "articles",
    "contentType": "mdx",
    "flattenedPath": "articles/authentication-with-next-and-prisma"
  },
  "type": "Article",
  "readingTime": {
    "text": "7 min read",
    "minutes": 6.83,
    "time": 409800,
    "words": 1366
  },
  "wordCount": 1368,
  "slug": "authentication-with-next-and-prisma"
}